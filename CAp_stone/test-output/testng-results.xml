<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="40" passed="28" failed="1" skipped="11">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-09-08T15:31:48 IST" name="Suite" finished-at="2025-09-08T15:33:20 IST" duration-ms="91450">
    <groups>
    </groups>
    <test started-at="2025-09-08T15:31:48 IST" name="Test" finished-at="2025-09-08T15:33:20 IST" duration-ms="91450">
      <class name="tests.BagistoStepByStepTest">
        <test-method is-config="true" signature="setUpReport()[pri:0, instance:tests.BagistoStepByStepTest@45b4c3a9]" started-at="2025-09-08T15:31:48 IST" name="setUpReport" finished-at="2025-09-08T15:31:48 IST" duration-ms="264" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpReport -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.BagistoStepByStepTest@45b4c3a9]" started-at="2025-09-08T15:31:48 IST" name="setUp" finished-at="2025-09-08T15:31:50 IST" duration-ms="1680" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:tests.BagistoStepByStepTest@45b4c3a9]" started-at="2025-09-08T15:31:50 IST" name="startTest" finished-at="2025-09-08T15:31:50 IST" duration-ms="9" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.BagistoStepByStepTest.openAdminPanel()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="openAdminPanel()[pri:1, instance:tests.BagistoStepByStepTest@45b4c3a9]" started-at="2025-09-08T15:31:50 IST" name="openAdminPanel" finished-at="2025-09-08T15:31:53 IST" duration-ms="3216" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openAdminPanel -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:tests.BagistoStepByStepTest@45b4c3a9]" started-at="2025-09-08T15:31:53 IST" name="captureResult" finished-at="2025-09-08T15:31:53 IST" duration-ms="7" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=openAdminPanel status=SUCCESS method=BagistoStepByStepTest.openAdminPanel()[pri:1, instance:tests.BagistoStepByStepTest@45b4c3a9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method signature="enterEmail()[pri:2, instance:tests.BagistoStepByStepTest@45b4c3a9]" started-at="2025-09-08T15:31:53 IST" name="enterEmail" finished-at="2025-09-08T15:31:53 IST" depends-on-methods="tests.BagistoStepByStepTest.openAdminPanel" duration-ms="172" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enterEmail -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:tests.BagistoStepByStepTest@45b4c3a9]" started-at="2025-09-08T15:31:53 IST" name="startTest" finished-at="2025-09-08T15:31:53 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.BagistoStepByStepTest.enterEmail()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:tests.BagistoStepByStepTest@45b4c3a9]" started-at="2025-09-08T15:31:53 IST" name="captureResult" finished-at="2025-09-08T15:31:53 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=enterEmail status=SUCCESS method=BagistoStepByStepTest.enterEmail()[pri:2, instance:tests.BagistoStepByStepTest@45b4c3a9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:tests.BagistoStepByStepTest@45b4c3a9]" started-at="2025-09-08T15:31:53 IST" name="startTest" finished-at="2025-09-08T15:31:53 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.BagistoStepByStepTest.enterPassword()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="enterPassword()[pri:3, instance:tests.BagistoStepByStepTest@45b4c3a9]" started-at="2025-09-08T15:31:53 IST" name="enterPassword" finished-at="2025-09-08T15:31:53 IST" depends-on-methods="tests.BagistoStepByStepTest.enterEmail" duration-ms="135" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enterPassword -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:tests.BagistoStepByStepTest@45b4c3a9]" started-at="2025-09-08T15:31:53 IST" name="captureResult" finished-at="2025-09-08T15:31:53 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=enterPassword status=SUCCESS method=BagistoStepByStepTest.enterPassword()[pri:3, instance:tests.BagistoStepByStepTest@45b4c3a9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method signature="clickSignIn()[pri:4, instance:tests.BagistoStepByStepTest@45b4c3a9]" started-at="2025-09-08T15:31:53 IST" name="clickSignIn" finished-at="2025-09-08T15:31:54 IST" depends-on-methods="tests.BagistoStepByStepTest.enterPassword" duration-ms="109" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickSignIn -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:tests.BagistoStepByStepTest@45b4c3a9]" started-at="2025-09-08T15:31:53 IST" name="startTest" finished-at="2025-09-08T15:31:53 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.BagistoStepByStepTest.clickSignIn()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:tests.BagistoStepByStepTest@45b4c3a9]" started-at="2025-09-08T15:31:54 IST" name="captureResult" finished-at="2025-09-08T15:31:54 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickSignIn status=SUCCESS method=BagistoStepByStepTest.clickSignIn()[pri:4, instance:tests.BagistoStepByStepTest@45b4c3a9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method signature="enableDarkMode()[pri:5, instance:tests.BagistoStepByStepTest@45b4c3a9]" started-at="2025-09-08T15:31:54 IST" name="enableDarkMode" finished-at="2025-09-08T15:31:56 IST" depends-on-methods="tests.BagistoStepByStepTest.clickSignIn" duration-ms="2803" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enableDarkMode -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:tests.BagistoStepByStepTest@45b4c3a9]" started-at="2025-09-08T15:31:54 IST" name="startTest" finished-at="2025-09-08T15:31:54 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.BagistoStepByStepTest.enableDarkMode()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:tests.BagistoStepByStepTest@45b4c3a9]" started-at="2025-09-08T15:31:56 IST" name="captureResult" finished-at="2025-09-08T15:31:56 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=enableDarkMode status=SUCCESS method=BagistoStepByStepTest.enableDarkMode()[pri:5, instance:tests.BagistoStepByStepTest@45b4c3a9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:tests.BagistoStepByStepTest@45b4c3a9]" started-at="2025-09-08T15:31:56 IST" name="startTest" finished-at="2025-09-08T15:31:56 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.BagistoStepByStepTest.openCalendar()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="openCalendar()[pri:6, instance:tests.BagistoStepByStepTest@45b4c3a9]" started-at="2025-09-08T15:31:56 IST" name="openCalendar" finished-at="2025-09-08T15:31:56 IST" depends-on-methods="tests.BagistoStepByStepTest.enableDarkMode" duration-ms="59" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openCalendar -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:tests.BagistoStepByStepTest@45b4c3a9]" started-at="2025-09-08T15:31:56 IST" name="captureResult" finished-at="2025-09-08T15:31:56 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=openCalendar status=SUCCESS method=BagistoStepByStepTest.openCalendar()[pri:6, instance:tests.BagistoStepByStepTest@45b4c3a9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:tests.BagistoStepByStepTest@45b4c3a9]" started-at="2025-09-08T15:31:56 IST" name="startTest" finished-at="2025-09-08T15:31:56 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.BagistoStepByStepTest.selectToday()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="selectToday()[pri:7, instance:tests.BagistoStepByStepTest@45b4c3a9]" started-at="2025-09-08T15:31:56 IST" name="selectToday" finished-at="2025-09-08T15:31:57 IST" depends-on-methods="tests.BagistoStepByStepTest.openCalendar" duration-ms="194" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectToday -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:tests.BagistoStepByStepTest@45b4c3a9]" started-at="2025-09-08T15:31:57 IST" name="captureResult" finished-at="2025-09-08T15:31:57 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectToday status=SUCCESS method=BagistoStepByStepTest.selectToday()[pri:7, instance:tests.BagistoStepByStepTest@45b4c3a9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method signature="openNotifications()[pri:8, instance:tests.BagistoStepByStepTest@45b4c3a9]" started-at="2025-09-08T15:31:57 IST" name="openNotifications" finished-at="2025-09-08T15:31:57 IST" depends-on-methods="tests.BagistoStepByStepTest.selectToday" duration-ms="96" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openNotifications -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:tests.BagistoStepByStepTest@45b4c3a9]" started-at="2025-09-08T15:31:57 IST" name="startTest" finished-at="2025-09-08T15:31:57 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.BagistoStepByStepTest.openNotifications()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:tests.BagistoStepByStepTest@45b4c3a9]" started-at="2025-09-08T15:31:57 IST" name="captureResult" finished-at="2025-09-08T15:31:57 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=openNotifications status=SUCCESS method=BagistoStepByStepTest.openNotifications()[pri:8, instance:tests.BagistoStepByStepTest@45b4c3a9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:tests.BagistoStepByStepTest@45b4c3a9]" started-at="2025-09-08T15:31:57 IST" name="startTest" finished-at="2025-09-08T15:31:57 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.BagistoStepByStepTest.clickViewAllNotifications()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="clickViewAllNotifications()[pri:9, instance:tests.BagistoStepByStepTest@45b4c3a9]" started-at="2025-09-08T15:31:57 IST" name="clickViewAllNotifications" finished-at="2025-09-08T15:31:59 IST" depends-on-methods="tests.BagistoStepByStepTest.openNotifications" duration-ms="2199" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickViewAllNotifications -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:tests.BagistoStepByStepTest@45b4c3a9]" started-at="2025-09-08T15:31:59 IST" name="captureResult" finished-at="2025-09-08T15:31:59 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickViewAllNotifications status=SUCCESS method=BagistoStepByStepTest.clickViewAllNotifications()[pri:9, instance:tests.BagistoStepByStepTest@45b4c3a9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method signature="searchCustomer()[pri:10, instance:tests.BagistoStepByStepTest@45b4c3a9]" started-at="2025-09-08T15:31:59 IST" name="searchCustomer" finished-at="2025-09-08T15:32:02 IST" depends-on-methods="tests.BagistoStepByStepTest.clickViewAllNotifications" duration-ms="3105" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchCustomer -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:tests.BagistoStepByStepTest@45b4c3a9]" started-at="2025-09-08T15:31:59 IST" name="startTest" finished-at="2025-09-08T15:31:59 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.BagistoStepByStepTest.searchCustomer() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:tests.BagistoStepByStepTest@45b4c3a9]" started-at="2025-09-08T15:32:02 IST" name="captureResult" finished-at="2025-09-08T15:32:02 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchCustomer status=SUCCESS method=BagistoStepByStepTest.searchCustomer()[pri:10, instance:tests.BagistoStepByStepTest@45b4c3a9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method signature="clickCustomersDiv()[pri:11, instance:tests.BagistoStepByStepTest@45b4c3a9]" started-at="2025-09-08T15:32:02 IST" name="clickCustomersDiv" finished-at="2025-09-08T15:32:02 IST" depends-on-methods="tests.BagistoStepByStepTest.searchCustomer" duration-ms="47" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickCustomersDiv -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:tests.BagistoStepByStepTest@45b4c3a9]" started-at="2025-09-08T15:32:02 IST" name="startTest" finished-at="2025-09-08T15:32:02 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.BagistoStepByStepTest.clickCustomersDiv()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:tests.BagistoStepByStepTest@45b4c3a9]" started-at="2025-09-08T15:32:02 IST" name="captureResult" finished-at="2025-09-08T15:32:02 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickCustomersDiv status=SUCCESS method=BagistoStepByStepTest.clickCustomersDiv()[pri:11, instance:tests.BagistoStepByStepTest@45b4c3a9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method signature="waitForSearchResults()[pri:12, instance:tests.BagistoStepByStepTest@45b4c3a9]" started-at="2025-09-08T15:32:02 IST" name="waitForSearchResults" finished-at="2025-09-08T15:32:02 IST" depends-on-methods="tests.BagistoStepByStepTest.clickCustomersDiv" duration-ms="25" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waitForSearchResults -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:tests.BagistoStepByStepTest@45b4c3a9]" started-at="2025-09-08T15:32:02 IST" name="startTest" finished-at="2025-09-08T15:32:02 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.BagistoStepByStepTest.waitForSearchResults()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:tests.BagistoStepByStepTest@45b4c3a9]" started-at="2025-09-08T15:32:02 IST" name="captureResult" finished-at="2025-09-08T15:32:02 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=waitForSearchResults status=SUCCESS method=BagistoStepByStepTest.waitForSearchResults()[pri:12, instance:tests.BagistoStepByStepTest@45b4c3a9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:tests.BagistoStepByStepTest@45b4c3a9]" started-at="2025-09-08T15:32:02 IST" name="startTest" finished-at="2025-09-08T15:32:02 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.BagistoStepByStepTest.clickFirstSearchResult()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="clickFirstSearchResult()[pri:13, instance:tests.BagistoStepByStepTest@45b4c3a9]" started-at="2025-09-08T15:32:02 IST" name="clickFirstSearchResult" finished-at="2025-09-08T15:32:05 IST" depends-on-methods="tests.BagistoStepByStepTest.waitForSearchResults" duration-ms="2382" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickFirstSearchResult -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:tests.BagistoStepByStepTest@45b4c3a9]" started-at="2025-09-08T15:32:05 IST" name="captureResult" finished-at="2025-09-08T15:32:05 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickFirstSearchResult status=SUCCESS method=BagistoStepByStepTest.clickFirstSearchResult()[pri:13, instance:tests.BagistoStepByStepTest@45b4c3a9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method signature="waitForDeleteIcon()[pri:14, instance:tests.BagistoStepByStepTest@45b4c3a9]" started-at="2025-09-08T15:32:05 IST" name="waitForDeleteIcon" finished-at="2025-09-08T15:32:05 IST" depends-on-methods="tests.BagistoStepByStepTest.clickFirstSearchResult" duration-ms="52" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waitForDeleteIcon -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:tests.BagistoStepByStepTest@45b4c3a9]" started-at="2025-09-08T15:32:05 IST" name="startTest" finished-at="2025-09-08T15:32:05 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.BagistoStepByStepTest.waitForDeleteIcon()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:tests.BagistoStepByStepTest@45b4c3a9]" started-at="2025-09-08T15:32:05 IST" name="captureResult" finished-at="2025-09-08T15:32:05 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=waitForDeleteIcon status=SUCCESS method=BagistoStepByStepTest.waitForDeleteIcon()[pri:14, instance:tests.BagistoStepByStepTest@45b4c3a9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method signature="clickDeleteIcon()[pri:15, instance:tests.BagistoStepByStepTest@45b4c3a9]" started-at="2025-09-08T15:32:05 IST" name="clickDeleteIcon" finished-at="2025-09-08T15:32:05 IST" depends-on-methods="tests.BagistoStepByStepTest.waitForDeleteIcon" duration-ms="123" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickDeleteIcon -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:tests.BagistoStepByStepTest@45b4c3a9]" started-at="2025-09-08T15:32:05 IST" name="startTest" finished-at="2025-09-08T15:32:05 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.BagistoStepByStepTest.clickDeleteIcon()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:tests.BagistoStepByStepTest@45b4c3a9]" started-at="2025-09-08T15:32:05 IST" name="captureResult" finished-at="2025-09-08T15:32:05 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickDeleteIcon status=SUCCESS method=BagistoStepByStepTest.clickDeleteIcon()[pri:15, instance:tests.BagistoStepByStepTest@45b4c3a9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method signature="waitForAgreeBtn()[pri:16, instance:tests.BagistoStepByStepTest@45b4c3a9]" started-at="2025-09-08T15:32:05 IST" name="waitForAgreeBtn" finished-at="2025-09-08T15:32:05 IST" depends-on-methods="tests.BagistoStepByStepTest.clickDeleteIcon" duration-ms="567" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waitForAgreeBtn -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:tests.BagistoStepByStepTest@45b4c3a9]" started-at="2025-09-08T15:32:05 IST" name="startTest" finished-at="2025-09-08T15:32:05 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.BagistoStepByStepTest.waitForAgreeBtn()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:tests.BagistoStepByStepTest@45b4c3a9]" started-at="2025-09-08T15:32:05 IST" name="captureResult" finished-at="2025-09-08T15:32:05 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=waitForAgreeBtn status=SUCCESS method=BagistoStepByStepTest.waitForAgreeBtn()[pri:16, instance:tests.BagistoStepByStepTest@45b4c3a9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:tests.BagistoStepByStepTest@45b4c3a9]" started-at="2025-09-08T15:32:05 IST" name="startTest" finished-at="2025-09-08T15:32:05 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.BagistoStepByStepTest.clickAgreeBtn()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="clickAgreeBtn()[pri:17, instance:tests.BagistoStepByStepTest@45b4c3a9]" started-at="2025-09-08T15:32:05 IST" name="clickAgreeBtn" finished-at="2025-09-08T15:32:07 IST" depends-on-methods="tests.BagistoStepByStepTest.waitForAgreeBtn" duration-ms="2142" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickAgreeBtn -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:tests.BagistoStepByStepTest@45b4c3a9]" started-at="2025-09-08T15:32:07 IST" name="captureResult" finished-at="2025-09-08T15:32:07 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickAgreeBtn status=SUCCESS method=BagistoStepByStepTest.clickAgreeBtn()[pri:17, instance:tests.BagistoStepByStepTest@45b4c3a9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method signature="goToCustomersMenu()[pri:18, instance:tests.BagistoStepByStepTest@45b4c3a9]" started-at="2025-09-08T15:32:07 IST" name="goToCustomersMenu" finished-at="2025-09-08T15:32:09 IST" depends-on-methods="tests.BagistoStepByStepTest.clickAgreeBtn" duration-ms="1833" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToCustomersMenu -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:tests.BagistoStepByStepTest@45b4c3a9]" started-at="2025-09-08T15:32:07 IST" name="startTest" finished-at="2025-09-08T15:32:07 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.BagistoStepByStepTest.goToCustomersMenu()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:tests.BagistoStepByStepTest@45b4c3a9]" started-at="2025-09-08T15:32:09 IST" name="captureResult" finished-at="2025-09-08T15:32:09 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=goToCustomersMenu status=SUCCESS method=BagistoStepByStepTest.goToCustomersMenu()[pri:18, instance:tests.BagistoStepByStepTest@45b4c3a9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method signature="clickCustomersSubMenu()[pri:19, instance:tests.BagistoStepByStepTest@45b4c3a9]" started-at="2025-09-08T15:32:09 IST" name="clickCustomersSubMenu" finished-at="2025-09-08T15:32:11 IST" depends-on-methods="tests.BagistoStepByStepTest.goToCustomersMenu" duration-ms="1874" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickCustomersSubMenu -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:tests.BagistoStepByStepTest@45b4c3a9]" started-at="2025-09-08T15:32:09 IST" name="startTest" finished-at="2025-09-08T15:32:09 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.BagistoStepByStepTest.clickCustomersSubMenu()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:tests.BagistoStepByStepTest@45b4c3a9]" started-at="2025-09-08T15:32:11 IST" name="captureResult" finished-at="2025-09-08T15:32:11 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickCustomersSubMenu status=SUCCESS method=BagistoStepByStepTest.clickCustomersSubMenu()[pri:19, instance:tests.BagistoStepByStepTest@45b4c3a9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:tests.BagistoStepByStepTest@45b4c3a9]" started-at="2025-09-08T15:32:11 IST" name="startTest" finished-at="2025-09-08T15:32:11 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.BagistoStepByStepTest.clickCreateCustomerBtn()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="clickCreateCustomerBtn()[pri:20, instance:tests.BagistoStepByStepTest@45b4c3a9]" started-at="2025-09-08T15:32:11 IST" name="clickCreateCustomerBtn" finished-at="2025-09-08T15:32:11 IST" depends-on-methods="tests.BagistoStepByStepTest.clickCustomersSubMenu" duration-ms="122" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickCreateCustomerBtn -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:tests.BagistoStepByStepTest@45b4c3a9]" started-at="2025-09-08T15:32:11 IST" name="captureResult" finished-at="2025-09-08T15:32:11 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickCreateCustomerBtn status=SUCCESS method=BagistoStepByStepTest.clickCreateCustomerBtn()[pri:20, instance:tests.BagistoStepByStepTest@45b4c3a9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:tests.BagistoStepByStepTest@45b4c3a9]" started-at="2025-09-08T15:32:11 IST" name="startTest" finished-at="2025-09-08T15:32:11 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.BagistoStepByStepTest.enterFirstName()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="enterFirstName()[pri:21, instance:tests.BagistoStepByStepTest@45b4c3a9]" started-at="2025-09-08T15:32:11 IST" name="enterFirstName" finished-at="2025-09-08T15:32:12 IST" depends-on-methods="tests.BagistoStepByStepTest.clickCreateCustomerBtn" duration-ms="611" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enterFirstName -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:tests.BagistoStepByStepTest@45b4c3a9]" started-at="2025-09-08T15:32:12 IST" name="captureResult" finished-at="2025-09-08T15:32:12 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=enterFirstName status=SUCCESS method=BagistoStepByStepTest.enterFirstName()[pri:21, instance:tests.BagistoStepByStepTest@45b4c3a9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method signature="enterLastName()[pri:22, instance:tests.BagistoStepByStepTest@45b4c3a9]" started-at="2025-09-08T15:32:12 IST" name="enterLastName" finished-at="2025-09-08T15:32:12 IST" depends-on-methods="tests.BagistoStepByStepTest.enterFirstName" duration-ms="83" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enterLastName -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:tests.BagistoStepByStepTest@45b4c3a9]" started-at="2025-09-08T15:32:12 IST" name="startTest" finished-at="2025-09-08T15:32:12 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.BagistoStepByStepTest.enterLastName()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:tests.BagistoStepByStepTest@45b4c3a9]" started-at="2025-09-08T15:32:12 IST" name="captureResult" finished-at="2025-09-08T15:32:12 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=enterLastName status=SUCCESS method=BagistoStepByStepTest.enterLastName()[pri:22, instance:tests.BagistoStepByStepTest@45b4c3a9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:tests.BagistoStepByStepTest@45b4c3a9]" started-at="2025-09-08T15:32:12 IST" name="startTest" finished-at="2025-09-08T15:32:12 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.BagistoStepByStepTest.enterCustomerEmail()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="enterCustomerEmail()[pri:23, instance:tests.BagistoStepByStepTest@45b4c3a9]" started-at="2025-09-08T15:32:12 IST" name="enterCustomerEmail" finished-at="2025-09-08T15:32:12 IST" depends-on-methods="tests.BagistoStepByStepTest.enterLastName" duration-ms="96" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enterCustomerEmail -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:tests.BagistoStepByStepTest@45b4c3a9]" started-at="2025-09-08T15:32:12 IST" name="captureResult" finished-at="2025-09-08T15:32:12 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=enterCustomerEmail status=SUCCESS method=BagistoStepByStepTest.enterCustomerEmail()[pri:23, instance:tests.BagistoStepByStepTest@45b4c3a9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:tests.BagistoStepByStepTest@45b4c3a9]" started-at="2025-09-08T15:32:12 IST" name="startTest" finished-at="2025-09-08T15:32:12 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.BagistoStepByStepTest.selectGender()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="selectGender()[pri:24, instance:tests.BagistoStepByStepTest@45b4c3a9]" started-at="2025-09-08T15:32:12 IST" name="selectGender" finished-at="2025-09-08T15:32:12 IST" depends-on-methods="tests.BagistoStepByStepTest.enterCustomerEmail" duration-ms="111" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectGender -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:tests.BagistoStepByStepTest@45b4c3a9]" started-at="2025-09-08T15:32:12 IST" name="captureResult" finished-at="2025-09-08T15:32:12 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectGender status=SUCCESS method=BagistoStepByStepTest.selectGender()[pri:24, instance:tests.BagistoStepByStepTest@45b4c3a9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:tests.BagistoStepByStepTest@45b4c3a9]" started-at="2025-09-08T15:32:12 IST" name="startTest" finished-at="2025-09-08T15:32:12 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.BagistoStepByStepTest.clickSaveCustomerBtn() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="clickSaveCustomerBtn()[pri:25, instance:tests.BagistoStepByStepTest@45b4c3a9]" started-at="2025-09-08T15:32:12 IST" name="clickSaveCustomerBtn" finished-at="2025-09-08T15:32:16 IST" depends-on-methods="tests.BagistoStepByStepTest.selectGender" duration-ms="4100" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickSaveCustomerBtn -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:tests.BagistoStepByStepTest@45b4c3a9]" started-at="2025-09-08T15:32:16 IST" name="captureResult" finished-at="2025-09-08T15:32:16 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickSaveCustomerBtn status=SUCCESS method=BagistoStepByStepTest.clickSaveCustomerBtn()[pri:25, instance:tests.BagistoStepByStepTest@45b4c3a9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:tests.BagistoStepByStepTest@45b4c3a9]" started-at="2025-09-08T15:32:16 IST" name="startTest" finished-at="2025-09-08T15:32:16 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.BagistoStepByStepTest.clickNewCustomerLogin()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="clickNewCustomerLogin()[pri:26, instance:tests.BagistoStepByStepTest@45b4c3a9]" started-at="2025-09-08T15:32:16 IST" name="clickNewCustomerLogin" finished-at="2025-09-08T15:32:16 IST" depends-on-methods="tests.BagistoStepByStepTest.clickSaveCustomerBtn" duration-ms="134" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickNewCustomerLogin -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:tests.BagistoStepByStepTest@45b4c3a9]" started-at="2025-09-08T15:32:16 IST" name="captureResult" finished-at="2025-09-08T15:32:16 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickNewCustomerLogin status=SUCCESS method=BagistoStepByStepTest.clickNewCustomerLogin()[pri:26, instance:tests.BagistoStepByStepTest@45b4c3a9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:tests.BagistoStepByStepTest@45b4c3a9]" started-at="2025-09-08T15:32:16 IST" name="startTest" finished-at="2025-09-08T15:32:16 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.BagistoStepByStepTest.clickAddress()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="clickAddress()[pri:27, instance:tests.BagistoStepByStepTest@45b4c3a9]" started-at="2025-09-08T15:32:16 IST" name="clickAddress" finished-at="2025-09-08T15:32:32 IST" depends-on-methods="tests.BagistoStepByStepTest.clickNewCustomerLogin" duration-ms="15109" status="FAIL">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for element to be clickable: By.xpath: //p[span[contains(@class, 'icon-location')] and contains(text(),'Address')] (tried for 15 second(s) with 500 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for element to be clickable: By.xpath: //p[span[contains(@class, 'icon-location')] and contains(text(),'Address')] (tried for 15 second(s) with 500 milliseconds interval)
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:84)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:228)
at pages.AddressPage.clickAddress(AddressPage.java:40)
at tests.BagistoStepByStepTest.clickAddress(BagistoStepByStepTest.java:151)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
Caused by: org.openqa.selenium.NoSuchWindowException: no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=139.0.7258.157)
Build info: version: '4.34.0', revision: '707dcb4246*'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.7'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [8e89c2b150fefd9c4a860ed3c975f57a, findElement {value=//p[span[contains(@class, 'icon-location')] and contains(text(),'Address')], using=xpath}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 139.0.7258.157, chrome: {chromedriverVersion: 139.0.7258.154 (9e0d6b2b47f..., userDataDir: C:\Users\deept\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:56280}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:56280/devtoo..., se:cdpVersion: 139.0.7258.157, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 8e89c2b150fefd9c4a860ed3c975f57a
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:215)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:544)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:367)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:361)
at org.openqa.selenium.support.ui.ExpectedConditions$7.apply(ExpectedConditions.java:194)
at org.openqa.selenium.support.ui.ExpectedConditions$7.apply(ExpectedConditions.java:190)
at org.openqa.selenium.support.ui.ExpectedConditions$22.apply(ExpectedConditions.java:627)
at org.openqa.selenium.support.ui.ExpectedConditions$22.apply(ExpectedConditions.java:624)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:203)
... 28 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickAddress -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:tests.BagistoStepByStepTest@45b4c3a9]" started-at="2025-09-08T15:32:32 IST" name="captureResult" finished-at="2025-09-08T15:32:32 IST" duration-ms="4" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickAddress status=FAILURE method=BagistoStepByStepTest.clickAddress()[pri:27, instance:tests.BagistoStepByStepTest@45b4c3a9] output={null}]]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchWindowException">
            <message>
              <![CDATA[no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=139.0.7258.157)
Build info: version: '4.34.0', revision: '707dcb4246*'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.7'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [8e89c2b150fefd9c4a860ed3c975f57a, screenshot {}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 139.0.7258.157, chrome: {chromedriverVersion: 139.0.7258.154 (9e0d6b2b47f..., userDataDir: C:\Users\deept\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:56280}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:56280/devtoo..., se:cdpVersion: 139.0.7258.157, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 8e89c2b150fefd9c4a860ed3c975f57a]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchWindowException: no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=139.0.7258.157)
Build info: version: '4.34.0', revision: '707dcb4246*'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.7'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [8e89c2b150fefd9c4a860ed3c975f57a, screenshot {}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 139.0.7258.157, chrome: {chromedriverVersion: 139.0.7258.154 (9e0d6b2b47f..., userDataDir: C:\Users\deept\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:56280}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:56280/devtoo..., se:cdpVersion: 139.0.7258.157, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 8e89c2b150fefd9c4a860ed3c975f57a
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:215)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:544)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:617)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:621)
at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:333)
at base.BaseTest.captureScreenshot(BaseTest.java:77)
at base.BaseTest.captureResult(BaseTest.java:52)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:836)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:805)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:781)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchWindowException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method signature="clickAddAddressBtn()[pri:28, instance:tests.BagistoStepByStepTest@45b4c3a9]" started-at="2025-09-08T15:32:32 IST" name="clickAddAddressBtn" finished-at="2025-09-08T15:32:32 IST" depends-on-methods="tests.BagistoStepByStepTest.clickAddress" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method tests.BagistoStepByStepTest.clickAddAddressBtn() on instance tests.BagistoStepByStepTest@45b4c3a9 depends on not successfully finished methods 
[tests.BagistoStepByStepTest.clickAddress() on instance tests.BagistoStepByStepTest@45b4c3a9]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method tests.BagistoStepByStepTest.clickAddAddressBtn() on instance tests.BagistoStepByStepTest@45b4c3a9 depends on not successfully finished methods 
[tests.BagistoStepByStepTest.clickAddress() on instance tests.BagistoStepByStepTest@45b4c3a9]
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:159)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickAddAddressBtn -->
        <test-method signature="enterAddressFirstName()[pri:29, instance:tests.BagistoStepByStepTest@45b4c3a9]" started-at="2025-09-08T15:32:32 IST" name="enterAddressFirstName" finished-at="2025-09-08T15:32:32 IST" depends-on-methods="tests.BagistoStepByStepTest.clickAddAddressBtn" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method tests.BagistoStepByStepTest.enterAddressFirstName() on instance tests.BagistoStepByStepTest@45b4c3a9 depends on not successfully finished methods 
[tests.BagistoStepByStepTest.clickAddAddressBtn() on instance tests.BagistoStepByStepTest@45b4c3a9]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method tests.BagistoStepByStepTest.enterAddressFirstName() on instance tests.BagistoStepByStepTest@45b4c3a9 depends on not successfully finished methods 
[tests.BagistoStepByStepTest.clickAddAddressBtn() on instance tests.BagistoStepByStepTest@45b4c3a9]
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:159)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enterAddressFirstName -->
        <test-method signature="enterAddressLastName()[pri:30, instance:tests.BagistoStepByStepTest@45b4c3a9]" started-at="2025-09-08T15:32:32 IST" name="enterAddressLastName" finished-at="2025-09-08T15:32:32 IST" depends-on-methods="tests.BagistoStepByStepTest.enterAddressFirstName" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method tests.BagistoStepByStepTest.enterAddressLastName() on instance tests.BagistoStepByStepTest@45b4c3a9 depends on not successfully finished methods 
[tests.BagistoStepByStepTest.enterAddressFirstName() on instance tests.BagistoStepByStepTest@45b4c3a9]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method tests.BagistoStepByStepTest.enterAddressLastName() on instance tests.BagistoStepByStepTest@45b4c3a9 depends on not successfully finished methods 
[tests.BagistoStepByStepTest.enterAddressFirstName() on instance tests.BagistoStepByStepTest@45b4c3a9]
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:159)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enterAddressLastName -->
        <test-method signature="enterAddressEmail()[pri:31, instance:tests.BagistoStepByStepTest@45b4c3a9]" started-at="2025-09-08T15:32:32 IST" name="enterAddressEmail" finished-at="2025-09-08T15:32:32 IST" depends-on-methods="tests.BagistoStepByStepTest.enterAddressLastName" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method tests.BagistoStepByStepTest.enterAddressEmail() on instance tests.BagistoStepByStepTest@45b4c3a9 depends on not successfully finished methods 
[tests.BagistoStepByStepTest.enterAddressLastName() on instance tests.BagistoStepByStepTest@45b4c3a9]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method tests.BagistoStepByStepTest.enterAddressEmail() on instance tests.BagistoStepByStepTest@45b4c3a9 depends on not successfully finished methods 
[tests.BagistoStepByStepTest.enterAddressLastName() on instance tests.BagistoStepByStepTest@45b4c3a9]
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:159)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enterAddressEmail -->
        <test-method signature="enterStreetAddress()[pri:32, instance:tests.BagistoStepByStepTest@45b4c3a9]" started-at="2025-09-08T15:32:32 IST" name="enterStreetAddress" finished-at="2025-09-08T15:32:32 IST" depends-on-methods="tests.BagistoStepByStepTest.enterAddressEmail" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method tests.BagistoStepByStepTest.enterStreetAddress() on instance tests.BagistoStepByStepTest@45b4c3a9 depends on not successfully finished methods 
[tests.BagistoStepByStepTest.enterAddressEmail() on instance tests.BagistoStepByStepTest@45b4c3a9]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method tests.BagistoStepByStepTest.enterStreetAddress() on instance tests.BagistoStepByStepTest@45b4c3a9 depends on not successfully finished methods 
[tests.BagistoStepByStepTest.enterAddressEmail() on instance tests.BagistoStepByStepTest@45b4c3a9]
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:159)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enterStreetAddress -->
        <test-method signature="selectCountry()[pri:33, instance:tests.BagistoStepByStepTest@45b4c3a9]" started-at="2025-09-08T15:32:32 IST" name="selectCountry" finished-at="2025-09-08T15:32:32 IST" depends-on-methods="tests.BagistoStepByStepTest.enterStreetAddress" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method tests.BagistoStepByStepTest.selectCountry() on instance tests.BagistoStepByStepTest@45b4c3a9 depends on not successfully finished methods 
[tests.BagistoStepByStepTest.enterStreetAddress() on instance tests.BagistoStepByStepTest@45b4c3a9]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method tests.BagistoStepByStepTest.selectCountry() on instance tests.BagistoStepByStepTest@45b4c3a9 depends on not successfully finished methods 
[tests.BagistoStepByStepTest.enterStreetAddress() on instance tests.BagistoStepByStepTest@45b4c3a9]
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:159)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectCountry -->
        <test-method signature="selectState()[pri:34, instance:tests.BagistoStepByStepTest@45b4c3a9]" started-at="2025-09-08T15:32:32 IST" name="selectState" finished-at="2025-09-08T15:32:32 IST" depends-on-methods="tests.BagistoStepByStepTest.selectCountry" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method tests.BagistoStepByStepTest.selectState() on instance tests.BagistoStepByStepTest@45b4c3a9 depends on not successfully finished methods 
[tests.BagistoStepByStepTest.selectCountry() on instance tests.BagistoStepByStepTest@45b4c3a9]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method tests.BagistoStepByStepTest.selectState() on instance tests.BagistoStepByStepTest@45b4c3a9 depends on not successfully finished methods 
[tests.BagistoStepByStepTest.selectCountry() on instance tests.BagistoStepByStepTest@45b4c3a9]
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:159)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectState -->
        <test-method signature="enterCity()[pri:35, instance:tests.BagistoStepByStepTest@45b4c3a9]" started-at="2025-09-08T15:32:32 IST" name="enterCity" finished-at="2025-09-08T15:32:32 IST" depends-on-methods="tests.BagistoStepByStepTest.selectState" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method tests.BagistoStepByStepTest.enterCity() on instance tests.BagistoStepByStepTest@45b4c3a9 depends on not successfully finished methods 
[tests.BagistoStepByStepTest.selectState() on instance tests.BagistoStepByStepTest@45b4c3a9]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method tests.BagistoStepByStepTest.enterCity() on instance tests.BagistoStepByStepTest@45b4c3a9 depends on not successfully finished methods 
[tests.BagistoStepByStepTest.selectState() on instance tests.BagistoStepByStepTest@45b4c3a9]
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:159)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enterCity -->
        <test-method signature="enterPostCode()[pri:36, instance:tests.BagistoStepByStepTest@45b4c3a9]" started-at="2025-09-08T15:32:32 IST" name="enterPostCode" finished-at="2025-09-08T15:32:32 IST" depends-on-methods="tests.BagistoStepByStepTest.enterCity" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method tests.BagistoStepByStepTest.enterPostCode() on instance tests.BagistoStepByStepTest@45b4c3a9 depends on not successfully finished methods 
[tests.BagistoStepByStepTest.enterCity() on instance tests.BagistoStepByStepTest@45b4c3a9]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method tests.BagistoStepByStepTest.enterPostCode() on instance tests.BagistoStepByStepTest@45b4c3a9 depends on not successfully finished methods 
[tests.BagistoStepByStepTest.enterCity() on instance tests.BagistoStepByStepTest@45b4c3a9]
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:159)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enterPostCode -->
        <test-method signature="enterPhone()[pri:37, instance:tests.BagistoStepByStepTest@45b4c3a9]" started-at="2025-09-08T15:32:32 IST" name="enterPhone" finished-at="2025-09-08T15:32:32 IST" depends-on-methods="tests.BagistoStepByStepTest.enterPostCode" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method tests.BagistoStepByStepTest.enterPhone() on instance tests.BagistoStepByStepTest@45b4c3a9 depends on not successfully finished methods 
[tests.BagistoStepByStepTest.enterPostCode() on instance tests.BagistoStepByStepTest@45b4c3a9]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method tests.BagistoStepByStepTest.enterPhone() on instance tests.BagistoStepByStepTest@45b4c3a9 depends on not successfully finished methods 
[tests.BagistoStepByStepTest.enterPostCode() on instance tests.BagistoStepByStepTest@45b4c3a9]
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:159)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enterPhone -->
        <test-method signature="clickSaveAddressBtn()[pri:38, instance:tests.BagistoStepByStepTest@45b4c3a9]" started-at="2025-09-08T15:32:32 IST" name="clickSaveAddressBtn" finished-at="2025-09-08T15:32:32 IST" depends-on-methods="tests.BagistoStepByStepTest.enterPhone" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method tests.BagistoStepByStepTest.clickSaveAddressBtn() on instance tests.BagistoStepByStepTest@45b4c3a9 depends on not successfully finished methods 
[tests.BagistoStepByStepTest.enterPhone() on instance tests.BagistoStepByStepTest@45b4c3a9]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method tests.BagistoStepByStepTest.clickSaveAddressBtn() on instance tests.BagistoStepByStepTest@45b4c3a9 depends on not successfully finished methods 
[tests.BagistoStepByStepTest.enterPhone() on instance tests.BagistoStepByStepTest@45b4c3a9]
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:159)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickSaveAddressBtn -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.BagistoStepByStepTest@45b4c3a9]" started-at="2025-09-08T15:32:32 IST" name="tearDown" finished-at="2025-09-08T15:32:32 IST" duration-ms="165" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="flushReport()[pri:0, instance:tests.BagistoStepByStepTest@45b4c3a9]" started-at="2025-09-08T15:33:20 IST" name="flushReport" finished-at="2025-09-08T15:33:20 IST" duration-ms="257" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReport -->
      </class> <!-- tests.BagistoStepByStepTest -->
      <class name="tests.RegExcel">
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.RegExcel@4c39bec8]" started-at="2025-09-08T15:32:33 IST" name="setUp" finished-at="2025-09-08T15:32:36 IST" duration-ms="3687" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="signupTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:tests.RegExcel@4c39bec8]" started-at="2025-09-08T15:32:36 IST" name="signupTest" data-provider="signupData" finished-at="2025-09-08T15:33:07 IST" duration-ms="30351" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[bob]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[
Doe]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[bobby13@example.com ]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[bob123]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[bob123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signupTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.RegExcel@4c39bec8]" started-at="2025-09-08T15:33:07 IST" name="tearDown" finished-at="2025-09-08T15:33:07 IST" duration-ms="73" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.RegExcel@4c39bec8]" started-at="2025-09-08T15:33:07 IST" name="setUp" finished-at="2025-09-08T15:33:10 IST" duration-ms="2784" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="signupTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:tests.RegExcel@4c39bec8]" started-at="2025-09-08T15:33:10 IST" name="signupTest" data-provider="signupData" finished-at="2025-09-08T15:33:20 IST" duration-ms="9895" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Alie]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[dom]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Alie1@example.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[alie123]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[alie123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signupTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.RegExcel@4c39bec8]" started-at="2025-09-08T15:33:20 IST" name="tearDown" finished-at="2025-09-08T15:33:20 IST" duration-ms="78" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.RegExcel -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
